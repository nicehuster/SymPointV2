ninja_required_version = 1.3
cxx = c++
nvcc = /home/liuwenlong/cuda-12.1/bin/nvcc

cflags = -DTORCH_EXTENSION_NAME=pointops_cuda -DTORCH_API_INCLUDE_EXTENSION_H -DPYBIND11_COMPILER_TYPE=\"_gcc\" -DPYBIND11_STDLIB=\"_libstdcpp\" -DPYBIND11_BUILD_ABI=\"_cxxabi1011\" -isystem /home/liuwenlong/miniconda3/envs/mm2/lib/python3.10/site-packages/torch/include -isystem /home/liuwenlong/miniconda3/envs/mm2/lib/python3.10/site-packages/torch/include/torch/csrc/api/include -isystem /home/liuwenlong/miniconda3/envs/mm2/lib/python3.10/site-packages/torch/include/TH -isystem /home/liuwenlong/miniconda3/envs/mm2/lib/python3.10/site-packages/torch/include/THC -isystem /home/liuwenlong/cuda-12.1/include -isystem /home/liuwenlong/miniconda3/envs/mm2/include/python3.10 -D_GLIBCXX_USE_CXX11_ABI=0 -fPIC -std=c++17
post_cflags = 
cuda_cflags = -DTORCH_EXTENSION_NAME=pointops_cuda -DTORCH_API_INCLUDE_EXTENSION_H -DPYBIND11_COMPILER_TYPE=\"_gcc\" -DPYBIND11_STDLIB=\"_libstdcpp\" -DPYBIND11_BUILD_ABI=\"_cxxabi1011\" -isystem /home/liuwenlong/miniconda3/envs/mm2/lib/python3.10/site-packages/torch/include -isystem /home/liuwenlong/miniconda3/envs/mm2/lib/python3.10/site-packages/torch/include/torch/csrc/api/include -isystem /home/liuwenlong/miniconda3/envs/mm2/lib/python3.10/site-packages/torch/include/TH -isystem /home/liuwenlong/miniconda3/envs/mm2/lib/python3.10/site-packages/torch/include/THC -isystem /home/liuwenlong/cuda-12.1/include -isystem /home/liuwenlong/miniconda3/envs/mm2/include/python3.10 -D_GLIBCXX_USE_CXX11_ABI=0 -D__CUDA_NO_HALF_OPERATORS__ -D__CUDA_NO_HALF_CONVERSIONS__ -D__CUDA_NO_BFLOAT16_CONVERSIONS__ -D__CUDA_NO_HALF2_OPERATORS__ --expt-relaxed-constexpr -gencode=arch=compute_80,code=compute_80 -gencode=arch=compute_80,code=sm_80 --compiler-options '-fPIC' -std=c++17
cuda_post_cflags = 
cuda_dlink_post_cflags = 
ldflags = -shared -L/home/liuwenlong/miniconda3/envs/mm2/lib/python3.10/site-packages/torch/lib -lc10 -lc10_cuda -ltorch_cpu -ltorch_cuda -ltorch -ltorch_python -L/home/liuwenlong/cuda-12.1/lib64 -lcudart

rule compile
  command = $cxx -MMD -MF $out.d $cflags -c $in -o $out $post_cflags
  depfile = $out.d
  deps = gcc

rule cuda_compile
  depfile = $out.d
  deps = gcc
  command = $nvcc --generate-dependencies-with-compile --dependency-output $out.d $cuda_cflags -c $in -o $out $cuda_post_cflags



rule link
  command = $cxx $in $ldflags -o $out

build pointops_api.o: compile /comp_robot/niceliu/codes/tmp/spv2/modules/pointops/src/pointops_api.cpp
build knnquery_cuda.o: compile /comp_robot/niceliu/codes/tmp/spv2/modules/pointops/src/knnquery/knnquery_cuda.cpp
build knnquery_cuda_kernel.cuda.o: cuda_compile /comp_robot/niceliu/codes/tmp/spv2/modules/pointops/src/knnquery/knnquery_cuda_kernel.cu
build interpolation_cuda.o: compile /comp_robot/niceliu/codes/tmp/spv2/modules/pointops/src/interpolation/interpolation_cuda.cpp
build interpolation_cuda_kernel.cuda.o: cuda_compile /comp_robot/niceliu/codes/tmp/spv2/modules/pointops/src/interpolation/interpolation_cuda_kernel.cu
build sampling_cuda.o: compile /comp_robot/niceliu/codes/tmp/spv2/modules/pointops/src/sampling/sampling_cuda.cpp
build sampling_cuda_kernel.cuda.o: cuda_compile /comp_robot/niceliu/codes/tmp/spv2/modules/pointops/src/sampling/sampling_cuda_kernel.cu
build subtraction_cuda.o: compile /comp_robot/niceliu/codes/tmp/spv2/modules/pointops/src/subtraction/subtraction_cuda.cpp
build subtraction_cuda_kernel.cuda.o: cuda_compile /comp_robot/niceliu/codes/tmp/spv2/modules/pointops/src/subtraction/subtraction_cuda_kernel.cu
build aggregation_cuda.o: compile /comp_robot/niceliu/codes/tmp/spv2/modules/pointops/src/aggregation/aggregation_cuda.cpp
build aggregation_cuda_kernel.cuda.o: cuda_compile /comp_robot/niceliu/codes/tmp/spv2/modules/pointops/src/aggregation/aggregation_cuda_kernel.cu



build pointops_cuda.so: link pointops_api.o knnquery_cuda.o knnquery_cuda_kernel.cuda.o interpolation_cuda.o interpolation_cuda_kernel.cuda.o sampling_cuda.o sampling_cuda_kernel.cuda.o subtraction_cuda.o subtraction_cuda_kernel.cuda.o aggregation_cuda.o aggregation_cuda_kernel.cuda.o

default pointops_cuda.so
